# Test file for matrix_divided.py

##############
# Imports
##############

import unittest
from 2_matrix_divided import matrix_divided

##############
# Tests
##############

class TestMatrixDivided(unittest.TestCase):

    def test_matrix_divided_with_integers(self):
        """
        Test that matrix_divided() works correctly with integers.
        """
        matrix = [[3, 6, 9], [12, 15, 18]]
        expected = [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
        actual = matrix_divided(matrix, 3)
        self.assertEqual(actual, expected)

    def test_matrix_divided_with_floats(self):
        """
        Test that matrix_divided() works correctly with floats.
        """
        matrix = [[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]]
        expected = [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]
        actual = matrix_divided(matrix, 3)
        self.assertEqual(actual, expected)

    def test_matrix_divided_with_mixed_types(self):
        """
        Test that matrix_divided() works correctly with mixed types.
        """
        matrix = [[1, -2.2, 3, 4.4, 5], [-6.6, 7.00, 8, 9.999, 10]]
        expected = [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]
        actual = matrix_divided(matrix, 3)
        self.assertEqual(actual, expected)

    def test_matrix_divided_with_invalid_matrices(self):
        """
        Test that matrix_divided() raises a TypeError for invalid matrices.
        """
        with self.assertRaises(TypeError):
            matrix_divided("not a list", 3)

        with self.assertRaises(TypeError):
            matrix_divided(None, 3)

        with self.assertRaises(TypeError):
            matrix_divided([], 3)

        with self.assertRaises(TypeError):
            matrix_divided([1, 2, 3], 3)

        with self.assertRaises(TypeError):
            matrix_divided([[1, 2, 3], 4, 5], 3)

    def test_matrix_divided_with_invalid_divisors(self):
        """
        Test that matrix_divided() raises a TypeError for invalid divisors.
        """
        with self.assertRaises(TypeError):
            matrix_divided([[1, 2, 3], [4, 5, 6]], "not a number")

        with self.assertRaises(TypeError):
            matrix_divided([[1, 2, 3], [4, 5, 6]], None)

        with self.assertRaises(ZeroDivisionError):
            matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
